- hosts: all
  vars:
    jdksrc: \\servername\d$\temp\jdk
    jresrc: \\servername\d$\temp\jre
    stage: C:\temp
    _64_jdk_package_path: C:\temp\jdk\jdk8_181_64.exe
    _32_jdk_package_path: C:\temp\jdk\jdk8_181_32.exe
    _64_jre_package_path: C:\temp\jre\jre-8u181-windows-x64.msi
    _32_jre_package_path: C:\temp\jre\jre-8u181-windows-i586.msi
    _64jdk: C:\Program Files\Java\jdk
    _64jre: C:\Program Files\Java\jre
    _32jdk: C:\Program Files (x86)\Java\jdk
    _32jre: C:\Program Files (x86)\Java\jre
  
  tasks:
    - name: get all installed Java version and uninstall them using uninstall strings
      win_shell: |
        $Uninst64 = Get-ChildItem -Path HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\*, HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall\* | Get-ItemProperty | Where-Object {$_.DisplayName -like '*Java *' -or $_.DisplayName -like '*J2SE*' -or $_.DisplayName -like '*Java(TM) *' -and $_.DisplayName -ne 'Java Auto Updater' -and ($_.Publisher -like '*Oracle*' -or $_.Publisher -like '*Sun*') -and $_.Publisher -ne '' } | Select-Object uninstallstring,InstallLocation,DisplayName,DisplayVersion
        ForEach($ustr in $Uninst64){
            echo $ustr.DisplayName$ustr.InstallLocation================= >> c:\JavaPreviousVersion.txt
            $ustr=$ustr.UninstallString -Replace ('msiexec.exe','') -Replace ('msiexec','') -Replace ('/I','') -Replace ('/X','') -Replace ('/q','')
            $ustr=$ustr.trim()
            Start-Process C:\Windows\System32\msiexec.exe -ArgumentList "/x $ustr /qn /norestart" -wait
        }
      register: sh_op
      tags:
        - uninstall
    - debug: var=sh_op.rc
    
    - win_shell: type C:\JavaPreviousVersion.txt
      register: ty
    
#    - debug: var=ty
      
    - debug:
        msg: 64bit jre
      when: _64jre in ty.stdout
    - block:
        - name: stage files for 32bit and 64bit jdk
          win_shell: Copy-Item -Path '\\servername\d$\temp\jdk' 'C:\temp' -recurse
          register: resuluta
          become: true
          
        - name: install 32bit jdk
          win_package:
            path: "{{ _32_jdk_package_path }}"
            state: present
            creates_path: C:\Program Files (x86)\Java\jdk1.8.0_181
            arguments: /s REBOOT=0
        
        - name: install 64bit jdk
          win_package:
            path: "{{ _64_jdk_package_path }}"
            state: present
            creates_path: C:\Program Files\Java\jdk1.8.0_181
            arguments: /s REBOOT=0
          notify: cleanup_both_package
        
      when:
        - _64jdk in ty.stdout
        - _32jdk in ty.stdout
        
    - block:
        - name: stage files for 32bit jdk and 64bit jre
          win_shell: Copy-Item -Path '\\servername\d$\temp\jre' 'C:\temp' -recurse
          register: resultb
          become: true
        
        - win_shell: Copy-Item -Path '\\servername\d$\temp\jdk' 'C:\temp' -recurse
          become: true
   
        - name: install 32bit jdk
          win_package:
            path: "{{ _32_jdk_package_path }}"
            state: present
            creates_path: C:\Program Files (x86)\Java\jdk1.8.0_181
            arguments: /s REBOOT=0
            
        - name: install 64bit jre
          win_package:
            path: "{{ _64_jre_package_path }}"
            state: present
            creates_path: C:\Program Files\Java\jre1.8.0_181
            arguments: /qn /norestart
          notify: cleanup_both_package
        
      when:
        - _32jdk in ty.stdout
        - _64jre in ty.stdout
        - resulta is skipped
        
    - block:
        - name: stage files for 64bit jdk and 32bit jre
          win_shell: Copy-Item -Path '\\servername\d$\temp\jre' 'C:\temp' -recurse
          register: resultc
          become: true
          
        - win_shell: Copy-Item -Path '\\servername\d$\temp\jdk' 'C:\temp' -recurse
          become: true
   
        - name: install 64bit jdk
          win_package:
            path: "{{ _64_jdk_package_path }}"
            state: present
            creates_path: C:\Program Files\Java\jdk1.8.0_181
            arguments: /s REBOOT=0
            
        - name: install 32bit jre
          win_package:
            path: "{{ _32_jre_package_path }}"
            state: present
            creates_path: C:\Program Files (x86)\Java\jre1.8.0_181
            arguments: /qn /norestart
          notify: cleanup_both_package
        
      when:
        - _64jdk in ty.stdout
        - _32jre in ty.stdout
        - resuluta is skipped
        - resultb is skipped
        
    - block:
        - name: stage files for 64bit jre and 32bit jre
          win_shell: Copy-Item -Path '\\servername\d$\temp\jre' 'C:\temp' -recurse
          register: resultd
          become: true
        - name: install 64bit jre
          win_package:
            path: "{{ _64_jre_package_path }}"
            state: present
            creates_path: C:\Program Files\Java\jre1.8.0_181
            arguments: /qn /norestart
            
        - name: install 32bit jre
          win_package:
            path: "{{ _32_jre_package_path }}"
            state: present
            creates_path: C:\Program Files (x86)\Java\jre1.8.0_181
            arguments: /qn /norestart
          notify: cleanup_both_package
        
      when:
        - _64jre in ty.stdout
        - _32jre in ty.stdout
        - resuluta is skipped
        - resultb is skipped
        - resultc is skipped
        
    - block:
        - name: stage files for 64bit jdk
          win_shell: Copy-Item -Path '\\servername\d$\temp\jdk' 'C:\temp' -recurse
          register: resulte
          become: true
   
        - name: install 64bit jdk
          win_package:
            path: "{{ _64_jdk_package_path }}"
            state: present
            creates_path: C:\Program Files\Java\jdk1.8.0_181
            arguments: /s REBOOT=0
          notify: cleanup_jdk_package
        
      when:
        - _64jdk in ty.stdout
        - resuluta is skipped
        - resultb is skipped
        - resultc is skipped
        - resultd is skipped
        
    - block:
        - name: stage files for 32bit jdk
          win_shell: Copy-Item -Path '\\servername\d$\temp\jdk' 'C:\temp' -recurse
          register: resultf
          become: true
   
        - name: install 32bit jdk
          win_package:
            path: "{{ _32_jdk_package_path }}"
            state: present
            creates_path: C:\Program Files (x86)\Java\jdk1.8.0_181
            arguments: /s REBOOT=0
          notify: cleanup_jdk_package
        
      when:
        - _32jdk in ty.stdout
        - resuluta is skipped
        - resultb is skipped
        - resultc is skipped
        - resultd is skipped
        - resulte is skipped
    - block:
        - name: stage files for 64bit jre
          win_shell: Copy-Item -Path '\\servername\d$\temp\jre' 'C:\temp' -recurse
          register: resultg
          become: true
   
        - name: install 64bit jre
          win_package:
            path: "{{ _64_jre_package_path }}"
            state: present
            creates_path: C:\Program Files\Java\jre1.8.0_181
            arguments: /qn /norestart
          notify: cleanup_jre_package
            
      when:
        - _64jre in ty.stdout
        - resuluta is skipped
        - resultb is skipped
        - resultc is skipped
        - resultd is skipped
        - resulte is skipped
        - resultf is skipped
        
    - block:
        - name: stage files for 32bit jre
          win_shell: Copy-Item -Path '\\servername\d$\temp\jre' 'C:\temp' -recurse
          register: resulth
          become: true
   
        - name: install 32bit jre
          win_package:
            path: "{{ _32_jre_package_path }}"
            state: present
            creates_path: C:\Program Files (x86)\Java\jre1.8.0_181
            arguments: /qn /norestart
          notify: cleanup_jre_package
      when:
        - _32jre in ty.stdout
        - resuluta is skipped
        - resultb is skipped
        - resultc is skipped
        - resultd is skipped
        - resulte is skipped
        - resultf is skipped
        - resultg is skipped
        
  handlers:
    - name: cleanup_jdk_package
      win_file:
        path: C:\temp\jdk
        state: absent
    
    - name: cleanup_jre_package
      win_file:
        path: C:\temp\jre
        state: absent
    
    - name: cleanup_both_package
      win_file:
        path: "{{item}}"
        state: absent
      with_items:
        - C:\temp\jdk
        - C:\temp\jre
